{{#each instructions}}
import {
  {{name}}
} from '../utils/callInstructions'
{{/each}}

import React, { useEffect, useCallback , useState } from 'react';
import {View, TextInput, Button , StyleSheet, Text,SafeAreaView} from 'react-native';


export default function CallInstructionsFrontEnd() {   
// variables for account 
const program = ""
const authority = ""
const systemProgram = ""
const clock = ""
{{#each instructions}}  
{{#each accounts}}
{{#unless (eq this.name "systemProgram")}}
{{#unless (eq this.name "authority")}}
{{#unless (eq this.name "clock")}}
const {{name}}_for_{{../name}} = ""
{{/unless}}
{{/unless}}
{{/unless}}
{{/each}}
{{/each}}


// React UseStates hooks for managing args 
//Example -> (argsName_for_instructionName , setArgsName_for_instructionName)
{{#each instructions}}
//for {{name}} instructions
{{#each args}}
const [{{name}}_for_{{../name}} , set{{name}}_for_{{../name}}] = useState()
{{/each}}
{{/each}}


//handler functions for inputs feilds
{{#each instructions}}
{{#each args}}
const {{name}}handler_for_{{../name}} = (e:any) => {
  set{{name}}_for_{{../name}}(e.target.value)
}
{{/each}}
{{/each}}
  
  return (
    <>
       <SafeAreaView>
      <Text style={styles.textSubHeading}>
    Call Instructions Of Your IDL
  </Text>
    {{#each instructions}}
              {{!-- // for {{name}} --}}
              {{#each args}}
              <View>
                 <Text style={styles.text}>
                  {{../name}} Instructions
                  </Text>
                <TextInput
                style={styles.input}
                placeholder={`Enter {{name}}`}
                onChangeText= {
                  {{name}}handler_for_{{../name}}
                }
                value={
                  {{name}}_for_{{../name}}
                }
                />
                </View>
                {{/each}}
                <View style={styles.button}>
                   <Button
                    title={`Call {{name}} Instructions`}
                    onPress = {
                    ()=>{{name}}(program , {{#each args}}{{name}}_for_{{../name}} , {{/each}}{{#each accounts}} {{#unless (eq this.name "systemProgram")}}{{#unless (eq this.name "authority")}}{{#unless (eq this.name "clock")}}{{name}}_for_{{../name}}{{/unless}}{{/unless}}{{/unless}} {{#if (eq this.name "authority")}}{{name}}{{/if}} {{#if (eq this.name "systemProgram")}}{{name}}{{/if}} {{#if (eq this.name "clock")}}{{name}}{{/if}},{{/each}})
              }
                />
                </View>
              {{/each}}
              </SafeAreaView>
              </>
  )
}

const styles = StyleSheet.create({
  input: {
    height: 40,
    borderColor: 'white',
    borderWidth: 1,
    marginTop: 10,
    paddingHorizontal: 10,
    
  },
  button: {
    height: 40,
    marginTop: 10,
    borderRadius : 4,
  },
  text : {
    fontSize: 16,
    marginTop : 10,
    fontWeight: 'bold',
    color : 'white'
  },
  textSubHeading : {
    textAlign : 'center',
    fontSize: 18,
    marginTop : 15,
    fontWeight: 'bold',
    color : 'white'
  }
  
});
